#+Title: College Cloud Workshop Post Process Demonstration
#+Author: VLEAD Systems
#+DATE: [2017-10-17]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ./org-templates/level-0.org
#+options: ^:nil

* Introduction
  
  This document describes the process for collecting feedback and
  usage analytics of college cloud workshop.

* Steps
** Registration (first time only) 
   College would need to register with College Cloud Edition before
   the first use. For registration please follow the below steps -
    
    1) Access the URL - http://<college-cloud-server-ip>/cc_registration.
    2) Fill the details and click on Save button.
   
   (Note: 
** Select labs for the workshop
   Before conducting college cloud workshop select the labs from
   interested streams or disciplines
   1) Visit =[[http://vlabs.ac.in/][vlabs.ac.in]]=
   2) Select any lab (example : - [[http://vlabs.ac.in/courses/course-v1:NIT-Surathkal+CIVIL20+Anytime/about][fluid-mechanics]])
   3) Visit simulation section of any experiemnt of chosen lab on
      step(2)
   4) Submit the feedback of lab (or) experiment

** Post process the college cloud workshop data

   1. Login into the =college-cloud= machine using
      #+BEGIN_EXAMPLE
      ssh <User>s@<College-Cloud-Machine-IP>
      #+END_EXAMPLE
   2. Change directory to =log_collection=
      #+BEGIN_EXAMPLE
      cd ~/log_collection
      #+END_EXAMPLE
   3. If you are network is behind the =proxy= unset it
      #+BEGIN_EXAMPLE
      unset http_proxy && unset https_proxy
      #+END_EXAMPLE
   4. Run the python script =get_logs.py= to collect the logs
      #+BEGIN_EXAMPLE
      python get_logs.py
      #+END_EXAMPLE
   5. Above step(4) generates =<name>.tar.gz= at location
      =/var/www/college-cloud-data/= and which contains feedback and
      usage analytics =.json= files compressed
   6. Copy the =<name>.tar.gz= in to the pendrive or to any other
      external storage device

** Push college cloud workshop analytics into database
   =VLEAD= implemented a python script which pushes college cloud
   workshop analytics into the database using REST APIs
*** Steps
    1) Clone the repository
       #+BEGIN_EXAMPLE
       git clone https://github.com/vled/college-cloud.git
       #+END_EXAMPLE
    2) Change directory to =collge-cloud=
       #+BEGIN_EXAMPLE
       cd college-cloud
       #+END_EXAMPLE
    3) Build the sources
       #+BEGIN_EXAMPLE
       make readtheorg=true
       #+END_EXAMPLE
    4) Change directory to =implementation=
       #+BEGIN_EXAMPLE
       cd build/code/runtime/implementation
       #+END_EXAMPLE
    5) Unset the =proxy=
       #+BEGIN_EXAMPLE
       unset http_proxy && unset https_proxy
       #+END_EXAMPLE
    6) Configure the =FEEDBACK_URL= at =post_process_config.py= where
       all the college cloud analytics will be pushed into
      #+BEGIN_EXAMPLE
      FEEDBACK_URL = "http://feedback.base4.vlabs.ac.in"
      #+END_EXAMPLE
    7) Download/copy the =<name>.tar.gz= into the current directory
       =build/code/implementation=
    8) Run the script to push the analytics into the database
       #+BEGIN_EXAMPLE
       python post_process.py <name>.tar.gz
       #+END_EXAMPLE
       
** Verify college cloud workshop analytics data
*** Steps   
    1) Login into the =base4= machine
       #+BEGIN_EXAMPLE
       ssh user@10.4.12.24
       #+END_EXAMPLE
    2) Login into the =elasticsearch database= container
       #+BEGIN_EXAMPLE
       vzctl enter CTID
       #vzctl enter 15
       #+END_EXAMPLE
    3) Fetch all available collections in =elasticseach databse= using
       #+BEGIN_EXAMPLE
       curl -XGET http://localhost:9200/_cat/indices
       #+END_EXAMPLE
    4) Above step(3) should list out all the collection and among which
       find out which collection belongs to college cloud workshop
    5) Copy the collection name and exectute the below command to know
       the feedback and usage counts
       #+BEGIN_EXAMPLE
       curl -XGET http://localhost:9200/collection_name/feedback/_count?pretty
       curl -XGET http://localhost:9200/collection_name/usages/_count?pretty
       #+END_EXAMPLE
